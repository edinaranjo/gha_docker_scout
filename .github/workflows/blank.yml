name: Build → Scan (Docker Scout) → Push to Docker Hub

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["**"]

# Permisos necesarios para que Docker Scout pueda escribir comentarios en PRs (opcional)
permissions:
  contents: read
  pull-requests: write

env:
  REGISTRY: docker.io
  IMAGE_NAME: ${{ secrets.DOCKERHUB_USERNAME }}/scout:v1
  SHA: ${{ github.event.pull_request.head.sha || github.sha }}

jobs:
  build-scan:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up QEMU (optional, for multi-arch builds)
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build image and load to runner (no push)
        id: build
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: false        # NO push aún
          load: true         # carga la imagen en el docker local del runner
          tags: ${{ env.IMAGE_NAME }}:sha-${{ env.SHA }}

      - name: Scan image with Docker Scout (fail on critical/high)
        id: scout
        uses: docker/scout-action@v1
        with:
          command: cves,recommendations
          image: local://${{ env.IMAGE_NAME }}:sha-${{ env.SHA }} 
          only-severities: critical,high
          exit-code: true   # si hay CVE (critical/high) falla el step/job
          summary: true     # agrega salida resumida al Job Summary / logs

      - name: Tag as latest (solo en main)
        if: ${{ github.ref == 'refs/heads/main' }}
        run: |
          docker tag ${{ env.IMAGE_NAME }}:sha-${{ env.SHA }} ${{ env.IMAGE_NAME }}:latest

      - name: Push images to Docker Hub (solo en main)
        if: ${{ github.ref == 'refs/heads/main' }}
        run: |
          docker push ${{ env.IMAGE_NAME }}:sha-${{ env.SHA }}
          docker push ${{ env.IMAGE_NAME }}:latest
